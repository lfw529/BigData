-- 统计连续登录

-- 1. 将数据按照uid和dt联合取重
select distinct
  uid, -- 用户id
  dt -- 日期
from
  v_user_log

-- 上面sql的执行就二个
+------+----------+
|   uid|        dt|
+------+----------+
|guid02|2018-03-02|
|guid01|2018-03-01|
|guid01|2018-03-06|
|guid01|2018-03-07|
|guid02|2018-03-01|
|guid02|2018-03-03|
|guid01|2018-03-02|
|guid01|2018-03-05|
|guid01|2018-03-04|
|guid01|2018-02-28|
|guid02|2018-03-06|
|guid05|2018-03-02|
|guid03|2018-03-02|
|guid03|2018-03-06|
|guid05|2018-03-07|
|guid03|2018-03-03|
|guid04|2018-03-05|
|guid04|2018-03-02|
|guid04|2018-03-06|
|guid05|2018-03-06|
+------+----------+

-- 2. 按照用户ID进行分区，同时按照日期排序，打行号
select
  uid,
  dt,
  row_number() over(partition by uid order by dt asc) rn
from
(
  select distinct
    uid, -- 用户id
    dt -- 日期
  from
    v_user_log
)

-- 上面sql的执行结果如下
+------+----------+---+
|   uid|        dt| rn|
+------+----------+---+
|guid01|2018-02-28|  1|
|guid01|2018-03-01|  2|
|guid01|2018-03-02|  3|
|guid01|2018-03-04|  4|
|guid01|2018-03-05|  5|
|guid01|2018-03-06|  6|
|guid01|2018-03-07|  7|
|guid02|2018-03-01|  1|
|guid02|2018-03-02|  2|
|guid02|2018-03-03|  3|
|guid02|2018-03-06|  4|
|guid03|2018-03-02|  1|
|guid03|2018-03-03|  2|
|guid03|2018-03-06|  3|
|guid04|2018-03-02|  1|
|guid04|2018-03-05|  2|
|guid04|2018-03-06|  3|
|guid04|2018-03-07|  4|
|guid05|2018-03-02|  1|
|guid05|2018-03-05|  2|
+------+----------+---+

-- 3. 将日期与行号进行相减

select
  uid,
  dt,
  date_sub(dt, rn) date_dif
from
(
  select -- 打行号
    uid,
    dt,
    row_number() over(partition by uid order by dt asc) rn
  from
  (
    select distinct -- 去重
      uid, -- 用户id
      dt -- 日期
    from
      v_user_log
  )
)

-- 上面sql实现的结果如下
+------+----------+----------+
|   uid|        dt|  date_dif|
+------+----------+----------+
|guid01|2018-02-28|2018-02-27|
|guid01|2018-03-01|2018-02-27|
|guid01|2018-03-02|2018-02-27|
|guid01|2018-03-04|2018-02-28|
|guid01|2018-03-05|2018-02-28|
|guid01|2018-03-06|2018-02-28|
|guid01|2018-03-07|2018-02-28|
|guid02|2018-03-01|2018-02-28|
|guid02|2018-03-02|2018-02-28|
|guid02|2018-03-03|2018-02-28|
|guid02|2018-03-06|2018-03-02|
|guid03|2018-03-02|2018-03-01|
|guid03|2018-03-03|2018-03-01|
|guid03|2018-03-06|2018-03-03|
|guid04|2018-03-02|2018-03-01|
|guid04|2018-03-05|2018-03-03|
|guid04|2018-03-06|2018-03-03|
|guid04|2018-03-07|2018-03-03|
|guid05|2018-03-02|2018-03-01|
|guid05|2018-03-05|2018-03-03|
+------+----------+----------+

-- 4. 按照uid 和 日期差值进行分组聚合
select
  uid,
  min(dt) start_dt,
  max(dt) end_dt,
  count(*) counts
from
(
  select -- 求日期差值
    uid,
    dt,
    date_sub(dt, rn) date_dif
  from
  (
    select -- 打行号
      uid,
      dt,
      row_number() over(partition by uid order by dt asc) rn
    from
    (
      select distinct -- 去重
        uid, -- 用户id
        dt -- 日期
      from
        v_user_log
    )
  )
)
group by uid, date_dif having counts >= 3

-- 上面SQL的执行结果如下

+------+----------+----------+------+
|   uid|  start_dt|    end_dt|counts|
+------+----------+----------+------+
|guid01|2018-02-28|2018-03-02|     3|
|guid01|2018-03-04|2018-03-07|     4|
|guid02|2018-03-01|2018-03-03|     3|
|guid04|2018-03-05|2018-03-07|     3|
|guid05|2018-03-05|2018-03-07|     3|
+------+----------+----------+------+


